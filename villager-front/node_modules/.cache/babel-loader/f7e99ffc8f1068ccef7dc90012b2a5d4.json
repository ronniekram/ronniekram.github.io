{"ast":null,"code":"var _jsxFileName = \"/Users/HotRonnie/Desktop/ac-villagers-react/villager-front/src/containers/SearchContainer.js\";\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { fetchIslands } from './actions/islandActions';\nimport { fetchVillagers } from './actions/villagerActions';\nimport { addVillager } from '../actions/villagerActions';\nimport SearchBar from '../components/search/SearchBar'; // import SearchResults from '../components/search/SearchResults';\n\nfunction SearchContainer(addVillager, fetchIslands, fetchVillagers, villagers) {\n  const [query, setQuery] = useState('');\n  useEffect(() => {\n    fetchIslands();\n    fetchVillagers();\n  }, [fetchIslands, fetchVillagers]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: '/search',\n    render: routerProps => /*#__PURE__*/React.createElement(SearchBar, Object.assign({}, routerProps, {\n      villagers: villagers,\n      query: query,\n      setQuery: setQuery,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  })));\n}\n\nconst mapStateToProps = state => {\n  return {\n    villagers: state.villagers,\n    islands: state.islands\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addVillager,\n  fetchIslands,\n  fetchVillagers\n})(SearchContainer);","map":{"version":3,"sources":["/Users/HotRonnie/Desktop/ac-villagers-react/villager-front/src/containers/SearchContainer.js"],"names":["React","useState","useEffect","connect","Route","Switch","fetchIslands","fetchVillagers","addVillager","SearchBar","SearchContainer","villagers","query","setQuery","routerProps","mapStateToProps","state","islands"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,SAAQC,YAAR,QAA2B,yBAA3B;AACA,SAAQC,cAAR,QAA6B,2BAA7B;AACA,SAAQC,WAAR,QAA0B,4BAA1B;AACA,OAAOC,SAAP,MAAsB,gCAAtB,C,CACA;;AAEA,SAASC,eAAT,CAAyBF,WAAzB,EAAsCF,YAAtC,EAAoDC,cAApD,EAAoEI,SAApE,EAA+E;AAC7E,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,YAAY;AACZC,IAAAA,cAAc;AACf,GAHQ,EAGP,CAACD,YAAD,EAAeC,cAAf,CAHO,CAAT;AAKA,sBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAE,SAAnB;AACA,IAAA,MAAM,EAAGO,WAAD,iBACN,oBAAC,SAAD,oBAAeA,WAAf;AACA,MAAA,SAAS,EAAEH,SADX;AAEA,MAAA,KAAK,EAAEC,KAFP;AAGA,MAAA,QAAQ,EAAEC,QAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF,CADF;AAaD;;AAEC,MAAME,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLL,IAAAA,SAAS,EAAEK,KAAK,CAACL,SADZ;AAELM,IAAAA,OAAO,EAAED,KAAK,CAACC;AAFV,GAAP;AAID,CALD;;AAOF,eAAed,OAAO,CAACY,eAAD,EAAkB;AAACP,EAAAA,WAAD;AAAcF,EAAAA,YAAd;AAA4BC,EAAAA;AAA5B,CAAlB,CAAP,CAAsEG,eAAtE,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom'\nimport {fetchIslands} from './actions/islandActions';\nimport {fetchVillagers} from './actions/villagerActions';\nimport {addVillager} from '../actions/villagerActions';\nimport SearchBar from '../components/search/SearchBar';\n// import SearchResults from '../components/search/SearchResults';\n\nfunction SearchContainer(addVillager, fetchIslands, fetchVillagers, villagers) {\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    fetchIslands();\n    fetchVillagers();\n  },[fetchIslands, fetchVillagers])\n\n  return (\n    <> \n      <Switch>\n      <Route exact path={'/search'} \n      render={(routerProps) => \n        <SearchBar {...routerProps} \n        villagers={villagers}\n        query={query} \n        setQuery={setQuery} /> } />\n      </Switch>\n      {/* <SearchBar query={query} setQuery={setQuery} villagers={villagers}  /> */}\n    </>\n  )\n}\n\n  const mapStateToProps = state => {\n    return {\n      villagers: state.villagers,\n      islands: state.islands\n    }\n  }\n\nexport default connect(mapStateToProps, {addVillager, fetchIslands, fetchVillagers})(SearchContainer);"]},"metadata":{},"sourceType":"module"}