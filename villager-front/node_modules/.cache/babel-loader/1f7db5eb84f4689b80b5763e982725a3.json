{"ast":null,"code":"var _jsxFileName = \"/Users/HotRonnie/Desktop/ac-villagers-react/villager-front/src/components/villagers/VillagerSearch.js\";\nimport React, { useState } from 'react';\nimport { Col } from 'react-bootstrap'; // import { connect } from 'react-redux';\n// import {addVillager} from '../../actions/villagerActions';\n// import { Link } from 'react-router-dom';\n\nimport Villagers from './Villagers';\n\nfunction VillagerSearch({\n  villagers,\n  island,\n  addVillager\n}) {\n  const [query, setQuery] = useState('');\n\n  const searchResults = () => {\n    return villagers.filter(villager => villager.name.toLowerCase().includes(query.toLowerCase()));\n  };\n\n  const handleAdd = (villagerId, islandId) => {\n    addVillager(villagerId, islandId);\n    window.location.reload(true);\n  };\n\n  const displayResults = () => {\n    let results = searchResults();\n\n    if (query === '') {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 16\n        }\n      });\n    } else {\n      // return  <ul>\n      //     {results.map(villager => <li key={villager.id}> <Link to={`/villagers/${villager.id}`}      villagers={villagers} \n      //       className=\"link\"> {villager.name} </Link> \n      //         <Button size=\"sm\" variant=\"light\"\n      //         onClick={() => handleAdd(villager.id, island.id)}> Add Villager </Button> </li>)}\n      //   </ul>\n\n      /*#__PURE__*/\n      React.createElement(Villagers, {\n        villagers: results,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Col, {\n    className: \"column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"searchbar\",\n    placeholder: \"Search villager by name...\",\n    value: query,\n    onChange: e => setQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), displayResults());\n} // export default connect(null, {addVillager})(VillagerSearch);\n\n\nexport default VillagerSearch;","map":{"version":3,"sources":["/Users/HotRonnie/Desktop/ac-villagers-react/villager-front/src/components/villagers/VillagerSearch.js"],"names":["React","useState","Col","Villagers","VillagerSearch","villagers","island","addVillager","query","setQuery","searchResults","filter","villager","name","toLowerCase","includes","handleAdd","villagerId","islandId","window","location","reload","displayResults","results","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,QAAoB,iBAApB,C,CACA;AACA;AACA;;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,cAAT,CAAwB;AAACC,EAAAA,SAAD;AAAYC,EAAAA,MAAZ;AAAoBC,EAAAA;AAApB,CAAxB,EAA0D;AACxD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMS,aAAa,GAAG,MAAM;AAC1B,WAAOL,SAAS,CAACM,MAAV,CAAiBC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,CAAcC,WAAd,GAA4BC,QAA5B,CAAqCP,KAAK,CAACM,WAAN,EAArC,CAA7B,CAAP;AACD,GAFD;;AAGA,QAAME,SAAS,GAAG,CAACC,UAAD,EAAaC,QAAb,KAA0B;AAC1CX,IAAAA,WAAW,CAACU,UAAD,EAAaC,QAAb,CAAX;AACAC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,IAAvB;AACD,GAHD;;AAKC,QAAMC,cAAc,GAAG,MAAM;AAC5B,QAAIC,OAAO,GAAGb,aAAa,EAA3B;;AACE,QAAIF,KAAK,KAAK,EAAd,EAAkB;AAChB,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD,KAFD,MAEO;AACL;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA,0BAAC,SAAD;AAAW,QAAA,SAAS,EAAEe,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD;AACF,GAbF;;AAeC,sBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,WAAW,EAAC,4BAFd;AAGE,IAAA,KAAK,EAAEf,KAHT;AAIE,IAAA,QAAQ,EAAGgB,CAAD,IAAOf,QAAQ,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOGJ,cAAc,EAPjB,CADF;AAWD,C,CAGH;;;AACA,eAAelB,cAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Col } from 'react-bootstrap';\n// import { connect } from 'react-redux';\n// import {addVillager} from '../../actions/villagerActions';\n// import { Link } from 'react-router-dom';\nimport Villagers from './Villagers'\n\nfunction VillagerSearch({villagers, island, addVillager}) {\n  const [query, setQuery] = useState('')\n\n  const searchResults = () => {\n    return villagers.filter(villager => villager.name.toLowerCase().includes(query.toLowerCase()))\n  }\n  const handleAdd = (villagerId, islandId) => {\n    addVillager(villagerId, islandId);\n    window.location.reload(true);\n  }\n\n   const displayResults = () => {\n    let results = searchResults();\n      if (query === '') {\n        return <div></div>\n      } else {\n        // return  <ul>\n        //     {results.map(villager => <li key={villager.id}> <Link to={`/villagers/${villager.id}`}      villagers={villagers} \n        //       className=\"link\"> {villager.name} </Link> \n        //         <Button size=\"sm\" variant=\"light\"\n        //         onClick={() => handleAdd(villager.id, island.id)}> Add Villager </Button> </li>)}\n        //   </ul>\n        <Villagers villagers={results} />\n      }\n    }\n    \n    return (\n      <Col className=\"column\">\n        <input type=\"text\" \n          className=\"searchbar\"\n          placeholder=\"Search villager by name...\" \n          value={query} \n          onChange={(e) => setQuery(e.target.value)} />\n\n        {displayResults()}\n      </Col>\n    )\n  }\n  \n\n// export default connect(null, {addVillager})(VillagerSearch);\nexport default VillagerSearch;"]},"metadata":{},"sourceType":"module"}