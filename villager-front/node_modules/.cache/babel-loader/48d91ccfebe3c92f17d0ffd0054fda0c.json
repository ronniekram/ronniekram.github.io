{"ast":null,"code":"var _jsxFileName = \"/Users/HotRonnie/Desktop/ac-villagers-react/villager-front/src/containers/VillagersContainer.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport Villager from '../components/villagers/Villager';\nimport Villagers from '../components/villagers/Villagers';\n\nfunction VillagersContainer({\n  villagers,\n  islands,\n  history,\n  match\n}) {\n  const villager = villagers && villagers.find(villager => villager.id == match.params.id);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/villagers\",\n    render: routerProps => /*#__PURE__*/React.createElement(Villagers, Object.assign({}, routerProps, {\n      villagers: villagers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `/villagers/:id`,\n    render: routerProps => /*#__PURE__*/React.createElement(Villager, Object.assign({}, routerProps, {\n      villager: villager,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  })));\n}\n\nconst mapStateToProps = state => {\n  return {\n    villagers: state.villagerReducer.villagers,\n    islands: state.islandReducer.islands\n  };\n};\n\nexport default connect(mapStateToProps)(VillagersContainer);","map":{"version":3,"sources":["/Users/HotRonnie/Desktop/ac-villagers-react/villager-front/src/containers/VillagersContainer.js"],"names":["React","connect","Route","Switch","Villager","Villagers","VillagersContainer","villagers","islands","history","match","villager","find","id","params","routerProps","mapStateToProps","state","villagerReducer","islandReducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;AACA,OAAOC,QAAP,MAAqB,kCAArB;AACA,OAAOC,SAAP,MAAsB,mCAAtB;;AAEA,SAASC,kBAAT,CAA4B;AAACC,EAAAA,SAAD;AAAYC,EAAAA,OAAZ;AAAqBC,EAAAA,OAArB;AAA8BC,EAAAA;AAA9B,CAA5B,EAAkE;AAChE,QAAMC,QAAQ,GAAGJ,SAAS,IAAIA,SAAS,CAACK,IAAV,CAAeD,QAAQ,IACnDA,QAAQ,CAACE,EAAT,IAAeH,KAAK,CAACI,MAAN,CAAaD,EADA,CAA9B;AAGE,sBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,YAAlB;AAA+B,IAAA,MAAM,EAAGE,WAAD,iBACrC,oBAAC,SAAD,oBAAeA,WAAf;AAA4B,MAAA,SAAS,EAAER,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAIE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,gBAApB;AACE,IAAA,MAAM,EAAGQ,WAAD,iBACR,oBAAC,QAAD,oBAAcA,WAAd;AACI,MAAA,QAAQ,EAAEJ,QADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF;AAaD;;AAEH,MAAMK,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLV,IAAAA,SAAS,EAAEU,KAAK,CAACC,eAAN,CAAsBX,SAD5B;AAELC,IAAAA,OAAO,EAAES,KAAK,CAACE,aAAN,CAAoBX;AAFxB,GAAP;AAID,CALD;;AAOA,eAAeP,OAAO,CAACe,eAAD,CAAP,CAAyBV,kBAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport Villager from '../components/villagers/Villager';\nimport Villagers from '../components/villagers/Villagers';\n\nfunction VillagersContainer({villagers, islands, history, match}) {\n  const villager = villagers && villagers.find(villager => \n    villager.id == match.params.id)\n\n    return (\n      <>\n        <Switch>\n          <Route exact path='/villagers' render={(routerProps) => \n            <Villagers {...routerProps} villagers={villagers} />\n          }></Route>\n          <Route exact path={`/villagers/:id`}\n            render={(routerProps) => \n            <Villager {...routerProps} \n                villager={villager} />}/>\n        </Switch>        \n      </>\n    )\n  }\n\nconst mapStateToProps = state => {\n  return {\n    villagers: state.villagerReducer.villagers,\n    islands: state.islandReducer.islands\n  }\n}\n\nexport default connect(mapStateToProps)(VillagersContainer);"]},"metadata":{},"sourceType":"module"}