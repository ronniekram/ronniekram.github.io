{"ast":null,"code":"var _jsxFileName = \"/Users/HotRonnie/Desktop/ac-villagers-react/villager-front/src/containers/IslandsContainer.js\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { addIsland, deleteIsland } from '../actions/islandActions';\nimport SearchBar from '../components/villagers/SearchBar';\nimport Island from '../components/islands/Island';\nimport Islands from '../components/islands/Islands';\nimport IslandInput from '../components/islands/IslandInput';\n\nfunction IslandsContainer({\n  addIsland,\n  deleteIsland,\n  islands,\n  villagers,\n  history\n}) {\n  const [name, setName] = useState('');\n  const [owner, setOwner] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addIsland({\n      name: name,\n      owner: owner\n    });\n    history.push('/islands');\n  };\n\n  const handleDelete = island => {\n    deleteIsland(island);\n    history.push('/islands');\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `/islands`,\n    render: routerProps => /*#__PURE__*/React.createElement(Islands, Object.assign({}, routerProps, {\n      islands: islands,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 67\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `/islands/new`,\n    render: routerProps => /*#__PURE__*/React.createElement(IslandInput, Object.assign({}, routerProps, {\n      handleSubmit: handleSubmit,\n      setName: setName,\n      name: name,\n      setOwner: setOwner,\n      owner: owner,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `/islands/:id`,\n    render: routerProps => /*#__PURE__*/React.createElement(Island, Object.assign({}, routerProps, {\n      islands: islands,\n      villagers: villagers,\n      handleDelete: handleDelete,\n      handleRemove: handleRemove,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `/search`,\n    render: routerProps => /*#__PURE__*/React.createElement(SearchBar, Object.assign({}, routerProps, {\n      villagers: villagers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  })));\n}\n\nconst mapStateToProps = state => {\n  return {\n    islands: state.islandReducer.islands,\n    villagers: state.villagerReducer.villagers\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addIsland,\n  deleteIsland\n})(IslandsContainer);","map":{"version":3,"sources":["/Users/HotRonnie/Desktop/ac-villagers-react/villager-front/src/containers/IslandsContainer.js"],"names":["React","useState","connect","Route","Switch","addIsland","deleteIsland","SearchBar","Island","Islands","IslandInput","IslandsContainer","islands","villagers","history","name","setName","owner","setOwner","handleSubmit","e","preventDefault","push","handleDelete","island","routerProps","handleRemove","mapStateToProps","state","islandReducer","villagerReducer"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {Route, Switch} from 'react-router-dom';\nimport {addIsland, deleteIsland} from '../actions/islandActions';\nimport SearchBar from '../components/villagers/SearchBar';\nimport Island from '../components/islands/Island'\nimport Islands from '../components/islands/Islands';\nimport IslandInput from '../components/islands/IslandInput';\n\n\nfunction IslandsContainer({addIsland, deleteIsland, islands, villagers, history}) {\n  const [name, setName] = useState('');\n  const [owner, setOwner] = useState('')\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addIsland({\n      name: name,\n      owner: owner\n    })\n    history.push('/islands')\n  }\n\n  const handleDelete = (island) => {\n    deleteIsland(island);\n    history.push('/islands')\n  }\n\n\n\n    return (\n      <>\n        <Switch>\n          <Route exact path={`/islands`} render={(routerProps) => <Islands {...routerProps} islands={islands} />} />\n\n          <Route path={`/islands/new`} \n            render={(routerProps) => \n            <IslandInput {...routerProps} handleSubmit={handleSubmit} setName={setName} name={name}setOwner={setOwner} owner={owner} />} />\n\n          <Route path={`/islands/:id`}\n            render={(routerProps) => \n              <Island {...routerProps} \n                islands={islands} villagers={villagers}handleDelete={handleDelete} handleRemove={handleRemove} />}/>\n\n          <Route path={`/search`}\n            render={(routerProps) => \n            <SearchBar {...routerProps} \n                villagers={villagers} />}/>\n        </Switch>\n      </>\n    )\n  }\n\nconst mapStateToProps = state => {\n  return {\n    islands: state.islandReducer.islands,\n    villagers: state.villagerReducer.villagers\n  }\n}\n\nexport default connect(mapStateToProps, {addIsland, deleteIsland})(IslandsContainer);"]},"metadata":{},"sourceType":"module"}