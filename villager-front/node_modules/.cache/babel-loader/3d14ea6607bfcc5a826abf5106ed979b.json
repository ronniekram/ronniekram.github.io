{"ast":null,"code":"var _jsxFileName = \"/Users/HotRonnie/Desktop/ac-villagers-react/villager-front/src/containers/IslandsContainer.js\";\n// import React from 'react';\n// import { connect } from 'react-redux';\n// import {Route, Switch} from 'react-router-dom';\n// import {fetchIslands, addIsland, deleteIsland} from '../actions/islandActions';\n// import {fetchVillagers} from '../actions/villagerActions'\n// import Island from '../components/islands/Island'\n// import Islands from '../components/islands/Islands';\n// import IslandInput from '../components/islands/IslandInput';\n// class IslandsContainer extends React.Component {\n//   componentDidMount() {\n//     this.props.fetchIslands()\n//     this.props.fetchVillagers()\n//   }\n//   render() {\n//     return (\n//       <>\n//         <Switch>\n//           <Route path='/islands/new' \n//             component={IslandInput} addIsland={addIsland} />\n//           <Route exact path='/islands/:id'\n//             render={(routerProps) => \n//               <Island {...routerProps} \n//                 islands={this.props.islands} />}/>\n//           <Route path='/islands' \n//             render={(routerProps) => \n//               <Islands {...routerProps} \n//                 islands={this.props.islands} />} />\n//         </Switch>\n//       </>\n//     )\n//   }\n// }\n// const mapStateToProps = state => {\n//   return {\n//     islands: state.islandReducer.islands\n//   }\n// }\n// export default connect(mapStateToProps, {fetchIslands, addIsland, deleteIsland, fetchVillagers})(IslandsContainer);\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { fetchIslands } from '../actions/islandActions';\nimport Island from '../components/islands/Island';\nimport Islands from '../components/islands/Islands';\nimport IslandInput from '../components/islands/IslandInput';\n\nfunction IslandsContainer({\n  history,\n  match,\n  islands\n}) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    path: `islands/new`,\n    render: routerProps => /*#__PURE__*/React.createElement(IslandInput, Object.assign({}, routerProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.url}/:id`,\n    render: routerProps => /*#__PURE__*/React.createElement(Island, Object.assign({}, routerProps, {\n      islands: islands,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.url}`,\n    render: routerProps => /*#__PURE__*/React.createElement(Islands, Object.assign({}, routerProps, {\n      islands: islands,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  })));\n}\n\nconst mapStateToProps = state => {\n  return {\n    islands: state.islandReducer.islands\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchIslands\n})(IslandsContainer);","map":{"version":3,"sources":["/Users/HotRonnie/Desktop/ac-villagers-react/villager-front/src/containers/IslandsContainer.js"],"names":["React","connect","Route","Switch","fetchIslands","Island","Islands","IslandInput","IslandsContainer","history","match","islands","routerProps","url","mapStateToProps","state","islandReducer"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,kBAA5B;AACA,SAAQC,YAAR,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAOC,WAAP,MAAwB,mCAAxB;;AAGA,SAASC,gBAAT,CAA0B;AAACC,EAAAA,OAAD;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA;AAAjB,CAA1B,EAAqD;AAEjD,sBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,aAAd;AACE,IAAA,MAAM,EAAGC,WAAD,iBACR,oBAAC,WAAD,oBAAiBA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAEF,KAAK,CAACG,GAAI,MAAhC;AACE,IAAA,MAAM,EAAGD,WAAD,iBACN,oBAAC,MAAD,oBAAYA,WAAZ;AACE,MAAA,OAAO,EAAED,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAUE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAED,KAAK,CAACG,GAAI,EAA1B;AACE,IAAA,MAAM,EAAGD,WAAD,iBACN,oBAAC,OAAD,oBAAaA,WAAb;AACE,MAAA,OAAO,EAAED,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,CADF;AAmBD;;AAEH,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLJ,IAAAA,OAAO,EAAEI,KAAK,CAACC,aAAN,CAAoBL;AADxB,GAAP;AAGD,CAJD;;AAMA,eAAeV,OAAO,CAACa,eAAD,EAAkB;AAACV,EAAAA;AAAD,CAAlB,CAAP,CAAyCI,gBAAzC,CAAf","sourcesContent":["// import React from 'react';\n// import { connect } from 'react-redux';\n// import {Route, Switch} from 'react-router-dom';\n// import {fetchIslands, addIsland, deleteIsland} from '../actions/islandActions';\n// import {fetchVillagers} from '../actions/villagerActions'\n// import Island from '../components/islands/Island'\n// import Islands from '../components/islands/Islands';\n// import IslandInput from '../components/islands/IslandInput';\n\n\n// class IslandsContainer extends React.Component {\n\n//   componentDidMount() {\n//     this.props.fetchIslands()\n//     this.props.fetchVillagers()\n//   }\n\n//   render() {\n//     return (\n//       <>\n//         <Switch>\n//           <Route path='/islands/new' \n//             component={IslandInput} addIsland={addIsland} />\n\n//           <Route exact path='/islands/:id'\n//             render={(routerProps) => \n//               <Island {...routerProps} \n//                 islands={this.props.islands} />}/>\n\n//           <Route path='/islands' \n//             render={(routerProps) => \n//               <Islands {...routerProps} \n//                 islands={this.props.islands} />} />\n//         </Switch>\n//       </>\n//     )\n//   }\n\n\n// }\n\n// const mapStateToProps = state => {\n//   return {\n//     islands: state.islandReducer.islands\n//   }\n// }\n\n// export default connect(mapStateToProps, {fetchIslands, addIsland, deleteIsland, fetchVillagers})(IslandsContainer);\n\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport {Route, Switch} from 'react-router-dom';\nimport {fetchIslands} from '../actions/islandActions';\nimport Island from '../components/islands/Island'\nimport Islands from '../components/islands/Islands';\nimport IslandInput from '../components/islands/IslandInput';\n\n\nfunction IslandsContainer({history, match, islands}) {\n\n    return (\n      <>\n        <Switch>\n          <Route path={`islands/new`} \n            render={(routerProps) => \n            <IslandInput {...routerProps}/>} />\n\n          <Route exact path={`${match.url}/:id`}\n            render={(routerProps) => \n              <Island {...routerProps} \n                islands={islands} />}/>\n\n          <Route path={`${match.url}`} \n            render={(routerProps) => \n              <Islands {...routerProps} \n                islands={islands} />} />\n        </Switch>\n      </>\n    )\n  }\n\nconst mapStateToProps = state => {\n  return {\n    islands: state.islandReducer.islands\n  }\n}\n\nexport default connect(mapStateToProps, {fetchIslands})(IslandsContainer);"]},"metadata":{},"sourceType":"module"}