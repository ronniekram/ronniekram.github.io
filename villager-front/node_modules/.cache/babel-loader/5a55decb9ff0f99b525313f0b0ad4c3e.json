{"ast":null,"code":"const islandReducer = (state = {\n  islands: [],\n  loading: false\n}, action) => {\n  switch (action.type) {\n    case 'FETCH_ISLANDS':\n      return { ...state,\n        islands: [...state.islands],\n        loading: true\n      };\n\n    case 'ISLANDS_FETCHED':\n      return { ...state,\n        islands: action.islands,\n        loading: false\n      };\n\n    case 'ADD_ISLAND':\n      const island = {};\n\n    case 'ADD_VILLAGER':\n      let islands = state.islands.map(island => {\n        if (island.id === action.payload.id) {\n          return action.payload;\n        } else {\n          return island;\n        }\n      });\n      return { ...state,\n        islands: islands\n      };\n\n    case 'DELETE_VILLAGER':\n      let islandsTwo = state.islands.map(island => {\n        if (island.id === action.payload.id) {\n          return action.payload;\n        } else {\n          return island;\n        }\n      });\n      return { ...state,\n        islands: islandsTwo\n      };\n\n    case 'DELETE_ISLAND':\n      const islandsThree = state.islands.filter(island => island.id !== action.id);\n      return { ...state,\n        islandsThree\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default islandReducer;","map":{"version":3,"sources":["/Users/HotRonnie/Desktop/ac-villagers-react/villager-front/src/reducers/IslandReducer.js"],"names":["islandReducer","state","islands","loading","action","type","island","map","id","payload","islandsTwo","islandsThree","filter"],"mappings":"AAAA,MAAMA,aAAa,GAAG,CAACC,KAAK,GAAG;AAACC,EAAAA,OAAO,EAAE,EAAV;AAAcC,EAAAA,OAAO,EAAE;AAAvB,CAAT,EAAwCC,MAAxC,KAAmD;AACvE,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,eAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELC,QAAAA,OAAO,EAAE,CAAC,GAAGD,KAAK,CAACC,OAAV,CAFJ;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAK,iBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELC,QAAAA,OAAO,EAAEE,MAAM,CAACF,OAFX;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAK,YAAL;AACE,YAAMG,MAAM,GAAG,EAAf;;AACF,SAAK,cAAL;AACE,UAAIJ,OAAO,GAAGD,KAAK,CAACC,OAAN,CAAcK,GAAd,CAAkBD,MAAM,IAAI;AACxC,YAAIA,MAAM,CAACE,EAAP,KAAcJ,MAAM,CAACK,OAAP,CAAeD,EAAjC,EAAqC;AACnC,iBAAOJ,MAAM,CAACK,OAAd;AACD,SAFD,MAEO;AACL,iBAAOH,MAAP;AACD;AACF,OANa,CAAd;AAOA,aAAO,EAAC,GAAGL,KAAJ;AAAWC,QAAAA,OAAO,EAAEA;AAApB,OAAP;;AACF,SAAK,iBAAL;AACE,UAAIQ,UAAU,GAAGT,KAAK,CAACC,OAAN,CAAcK,GAAd,CAAkBD,MAAM,IAAI;AAC3C,YAAIA,MAAM,CAACE,EAAP,KAAcJ,MAAM,CAACK,OAAP,CAAeD,EAAjC,EAAqC;AACnC,iBAAOJ,MAAM,CAACK,OAAd;AACD,SAFD,MAEO;AACL,iBAAOH,MAAP;AACD;AACF,OANgB,CAAjB;AAOA,aAAO,EAAC,GAAGL,KAAJ;AAAWC,QAAAA,OAAO,EAAEQ;AAApB,OAAP;;AACF,SAAK,eAAL;AACE,YAAMC,YAAY,GAAGV,KAAK,CAACC,OAAN,CAAcU,MAAd,CAAqBN,MAAM,IAAIA,MAAM,CAACE,EAAP,KAAcJ,MAAM,CAACI,EAApD,CAArB;AACA,aAAO,EAAC,GAAGP,KAAJ;AAAWU,QAAAA;AAAX,OAAP;;AACF;AACE,aAAOV,KAAP;AArCJ;AAuCD,CAxCD;;AA0CA,eAAeD,aAAf","sourcesContent":["const islandReducer = (state = {islands: [], loading: false}, action) => {\n  switch(action.type) {\n    case 'FETCH_ISLANDS': \n      return {\n        ...state, \n        islands: [...state.islands],\n        loading: true\n      }\n    case 'ISLANDS_FETCHED':\n      return {\n        ...state,\n        islands: action.islands,\n        loading: false\n      }\n    case 'ADD_ISLAND':\n      const island = {}\n    case 'ADD_VILLAGER': \n      let islands = state.islands.map(island => {\n        if (island.id === action.payload.id) {\n          return action.payload\n        } else {\n          return island\n        }\n      })\n      return {...state, islands: islands}\n    case 'DELETE_VILLAGER':\n      let islandsTwo = state.islands.map(island => {\n        if (island.id === action.payload.id) {\n          return action.payload\n        } else {\n          return island\n        }\n      })\n      return {...state, islands: islandsTwo}\n    case 'DELETE_ISLAND':\n      const islandsThree = state.islands.filter(island => island.id !== action.id)\n      return {...state, islandsThree}\n    default: \n      return state;\n  }\n}\n\nexport default islandReducer;"]},"metadata":{},"sourceType":"module"}