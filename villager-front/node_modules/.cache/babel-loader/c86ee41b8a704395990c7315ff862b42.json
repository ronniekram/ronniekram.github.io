{"ast":null,"code":"var _jsxFileName = \"/Users/HotRonnie/Desktop/ac-villagers-react/villager-front/src/components/islands/Island.js\";\n// import React from 'react';\n// import {connect} from 'react-redux'\n// import {deleteIsland} from '../../actions/islandActions'\n// import Villagers from '../villagers/Villagers'\n// import Villager from '../villagers/Villager'\n// function Island({history, match, islands, deleteIsland}) {\n//   const handleDelete = (island) => {\n//     deleteIsland(island)\n//     history.push('/islands')\n//   }\n//     const island = islands.find(island => island.id == match.params.id)\n//     const village = (island && island.villagers)\n//     return (\n//       <>\n//         <h2> {island && island.name} </h2>\n//           <h4>Owner: {island && island.owner}</h4>\n//           <p>Villagers: </p>\n//             <Villagers villagers={village} />\n//         <button onClick={() => handleDelete(island.id)}>Delete Island?</button>\n//     </>\n//     )\n//   }\n// export default connect(null, {deleteIsland})(Island);\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { deleteIsland } from '../../actions/islandActions';\nimport Villagers from '../villagers/Villagers';\nimport Villager from '../villagers/Villager';\n\nfunction Island({\n  match,\n  history,\n  islands,\n  deleteIsland\n}) {\n  const handleDelete = island => {\n    deleteIsland(island);\n    history.push('/islands');\n  };\n\n  const island = islands.find(island => island.id == match.params.id);\n  const village = island && island.villagers;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \" \", island && island.name, \" \"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Owner: \", island && island.owner), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleDelete(island.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"Delete Island?\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, \"Villagers: \"), /*#__PURE__*/React.createElement(Villagers, {\n    villagers: village,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: `${match.url}/${island.id}`,\n    render: () => /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 71\n      }\n    }, \"Click a villager to see more information\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `${match.url}/:id`,\n    render: routerProps => /*#__PURE__*/React.createElement(Villager, Object.assign({}, routerProps, {\n      villagers: village,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 65\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default connect(null, {\n  deleteIsland\n})(Island);","map":{"version":3,"sources":["/Users/HotRonnie/Desktop/ac-villagers-react/villager-front/src/components/islands/Island.js"],"names":["React","Route","connect","deleteIsland","Villagers","Villager","Island","match","history","islands","handleDelete","island","push","find","id","params","village","villagers","name","owner","url","routerProps"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,YAAR,QAA2B,6BAA3B;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;;AAEA,SAASC,MAAT,CAAgB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA,OAAlB;AAA2BN,EAAAA;AAA3B,CAAhB,EAA0D;AAExD,QAAMO,YAAY,GAAIC,MAAD,IAAY;AAC/BR,IAAAA,YAAY,CAACQ,MAAD,CAAZ;AACAH,IAAAA,OAAO,CAACI,IAAR,CAAa,UAAb;AACD,GAHD;;AAKA,QAAMD,MAAM,GAAGF,OAAO,CAACI,IAAR,CAAaF,MAAM,IAAIA,MAAM,CAACG,EAAP,IAAaP,KAAK,CAACQ,MAAN,CAAaD,EAAjD,CAAf;AACA,QAAME,OAAO,GAAIL,MAAM,IAAIA,MAAM,CAACM,SAAlC;AAEA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAMN,MAAM,IAAIA,MAAM,CAACO,IAAvB,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYP,MAAM,IAAIA,MAAM,CAACQ,KAA7B,CAFF,eAGI;AAAQ,IAAA,OAAO,EAAE,MAAMT,YAAY,CAACC,MAAM,CAACG,EAAR,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,eAKE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEE,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAMI,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAG,GAAET,KAAK,CAACa,GAAI,IAAGT,MAAM,CAACG,EAAG,EAA7C;AAAgD,IAAA,MAAM,EAAE,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,eAOI,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,GAAEP,KAAK,CAACa,GAAI,MAA1B;AAAiC,IAAA,MAAM,EAAEC,WAAW,iBAAI,oBAAC,QAAD,oBAAcA,WAAd;AAA2B,MAAA,SAAS,EAAEL,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADF;AAWD;;AACD,eAAed,OAAO,CAAC,IAAD,EAAO;AAACC,EAAAA;AAAD,CAAP,CAAP,CAA8BG,MAA9B,CAAf","sourcesContent":["// import React from 'react';\n// import {connect} from 'react-redux'\n// import {deleteIsland} from '../../actions/islandActions'\n// import Villagers from '../villagers/Villagers'\n// import Villager from '../villagers/Villager'\n\n\n// function Island({history, match, islands, deleteIsland}) {\n  \n//   const handleDelete = (island) => {\n//     deleteIsland(island)\n//     history.push('/islands')\n//   }\n\n\n//     const island = islands.find(island => island.id == match.params.id)\n//     const village = (island && island.villagers)\n//     return (\n//       <>\n//         <h2> {island && island.name} </h2>\n//           <h4>Owner: {island && island.owner}</h4>\n//           <p>Villagers: </p>\n//             <Villagers villagers={village} />\n//         <button onClick={() => handleDelete(island.id)}>Delete Island?</button>\n//     </>\n//     )\n//   }\n\n\n// export default connect(null, {deleteIsland})(Island);\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport {connect} from 'react-redux'\nimport {deleteIsland} from '../../actions/islandActions'\nimport Villagers from '../villagers/Villagers'\nimport Villager from '../villagers/Villager'\n\nfunction Island({ match, history, islands, deleteIsland }){\n\n  const handleDelete = (island) => {\n    deleteIsland(island)\n    history.push('/islands')\n  }\n\n  const island = islands.find(island => island.id == match.params.id)\n  const village = (island && island.villagers)\n\n  return (\n    <div>\n      <h2> {island && island.name} </h2>\n      <h4>Owner: {island && island.owner}</h4>\n        <button onClick={() => handleDelete(island.id)}>Delete Island?</button>\n      <p>Villagers: </p>\n      <Villagers villagers={village} />\n        <Route exact path={`${match.url}/${island.id}`} render={() => <p>Click a villager to see more information</p>} />\n        <Route path={`${match.url}/:id`} render={routerProps => <Villager {...routerProps} villagers={village} />} />\n    </div>\n  )\n}\nexport default connect(null, {deleteIsland})(Island);"]},"metadata":{},"sourceType":"module"}