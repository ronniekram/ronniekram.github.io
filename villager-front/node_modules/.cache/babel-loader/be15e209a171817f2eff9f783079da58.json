{"ast":null,"code":"const villagerReducer = (state = {\n  villagers: [],\n  loading: false\n}, action) => {\n  switch (action.type) {\n    case 'FETCH_VILLAGERS':\n      return { ...state,\n        villagers: [...state.villagers],\n        loading: true\n      };\n\n    case 'VILLAGERS_FETCHED':\n      return { ...state,\n        villagers: action.villagers,\n        loading: false\n      };\n\n    case 'ADD_VILLAGER':\n      let villagersPlus = state.islands.map(villager => {\n        if (villager.id === action.payload.id) {\n          return action.payload;\n        } else {\n          return villager;\n        }\n      });\n      return { ...state,\n        villagers: villagersPlus\n      };\n\n    case 'REMOVE_VILLAGER':\n      let villagersMinus = state.villagers.map(villager => {\n        if (villager.id !== action.payload.id) {\n          return action.payload;\n        } else {\n          return villager;\n        }\n      });\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default villagerReducer;","map":{"version":3,"sources":["/Users/HotRonnie/Desktop/ac-villagers-react/villager-front/src/reducers/VillagerReducer.js"],"names":["villagerReducer","state","villagers","loading","action","type","villagersPlus","islands","map","villager","id","payload","villagersMinus"],"mappings":"AAAA,MAAMA,eAAe,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE,EAAb;AAAiBC,EAAAA,OAAO,EAAE;AAA1B,CAAT,EAA4CC,MAA5C,KAAuD;AAC7E,UAAOA,MAAM,CAACC,IAAd;AACE,SAAK,iBAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELC,QAAAA,SAAS,EAAE,CAAC,GAAGD,KAAK,CAACC,SAAV,CAFN;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAK,mBAAL;AACE,aAAO,EACL,GAAGF,KADE;AAELC,QAAAA,SAAS,EAAEE,MAAM,CAACF,SAFb;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKA,SAAK,cAAL;AACA,UAAIG,aAAa,GAAGL,KAAK,CAACM,OAAN,CAAcC,GAAd,CAAkBC,QAAQ,IAAI;AAChD,YAAIA,QAAQ,CAACC,EAAT,KAAgBN,MAAM,CAACO,OAAP,CAAeD,EAAnC,EAAuC;AACrC,iBAAON,MAAM,CAACO,OAAd;AACD,SAFD,MAEO;AACL,iBAAOF,QAAP;AACD;AACF,OANmB,CAApB;AAOA,aAAO,EAAC,GAAGR,KAAJ;AAAWC,QAAAA,SAAS,EAAEI;AAAtB,OAAP;;AACF,SAAK,iBAAL;AACE,UAAIM,cAAc,GAAGX,KAAK,CAACC,SAAN,CAAgBM,GAAhB,CAAoBC,QAAQ,IAAI;AACnD,YAAIA,QAAQ,CAACC,EAAT,KAAgBN,MAAM,CAACO,OAAP,CAAeD,EAAnC,EAAuC;AACrC,iBAAON,MAAM,CAACO,OAAd;AACD,SAFD,MAEO;AACL,iBAAOF,QAAP;AACD;AACF,OANoB,CAArB;AAOA,aAAO,EAAC,GAAGR;AAAJ,OAAP;;AACF;AACE,aAAOA,KAAP;AAhCJ;AAkCD,CAnCD;;AAqCA,eAAeD,eAAf","sourcesContent":["const villagerReducer = (state = { villagers: [], loading: false }, action) => {\n  switch(action.type) {\n    case 'FETCH_VILLAGERS':\n      return {\n        ...state,\n        villagers: [...state.villagers],\n        loading: true\n      }\n    case 'VILLAGERS_FETCHED':\n      return {\n        ...state,\n        villagers: action.villagers,\n        loading: false\n      }\n      case 'ADD_VILLAGER': \n      let villagersPlus = state.islands.map(villager => {\n        if (villager.id === action.payload.id) {\n          return action.payload\n        } else {\n          return villager\n        }\n      })\n      return {...state, villagers: villagersPlus}\n    case 'REMOVE_VILLAGER':\n      let villagersMinus = state.villagers.map(villager => {\n        if (villager.id !== action.payload.id) {\n          return action.payload\n        } else {\n          return villager\n        }\n      })\n      return {...state, }\n    default:\n      return state;\n  }\n}\n\nexport default villagerReducer;"]},"metadata":{},"sourceType":"module"}