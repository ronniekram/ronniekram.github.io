{"ast":null,"code":"// action describes what you want to do -- simple function that returns an object\n// \"payload\" is the argument for an action\nexport function fetchIslands() {\n  return dispatch => {\n    dispatch({\n      type: 'FETCH_ISLANDS'\n    });\n    fetch('http://localhost:3000/islands').then(resp => resp.json()).then(data => dispatch({\n      type: 'ISLANDS_FETCHED',\n      islands: data\n    }));\n  };\n}\nexport const addIsland = data => {\n  return dispatch => {\n    fetch('http://localhost:3000/islands', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify(data)\n    }).then(resp => resp.json()).then(island => dispatch({\n      type: 'ADD_ISLAND',\n      payload: island\n    }));\n  };\n};\nexport const deleteIsland = islandId => {\n  return dispatch => {\n    return fetch(`http://localhost:3000/islands/${islandId}`, {\n      method: 'DELETE'\n    }).then(island => dispatch({\n      type: 'DELETE_ISLAND',\n      payload: island\n    }));\n  };\n};\nexport const addVillager = (islandId, villagerId) => {\n  return dispatch => {\n    return fetch(`http://localhost:3000/islands/${islandId}/villagers`, {\n      method: 'POST',\n      body: JSON.stringify\n    }).then(resp => resp.json()).then(island => dispatch({\n      type: 'ADD_VILLAGER',\n      payload: island\n    }));\n  };\n};\nexport const removeVillager = (islandId, villagerId) => {\n  return dispatch => {\n    return fetch(`http://localhost:3000/islands/${islandId}/villagers/${villagerId}`, {\n      method: 'DELETE'\n    }).then(island => dispatch({\n      type: 'REMOVE_VILLAGER',\n      payload: island\n    }));\n  };\n};","map":{"version":3,"sources":["/Users/HotRonnie/Desktop/ac-villagers-react/villager-front/src/actions/islandActions.js"],"names":["fetchIslands","dispatch","type","fetch","then","resp","json","data","islands","addIsland","headers","method","body","JSON","stringify","island","payload","deleteIsland","islandId","addVillager","villagerId","removeVillager"],"mappings":"AAAA;AACA;AAEA,OAAO,SAASA,YAAT,GAAwB;AAC7B,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAD,CAAR;AACAC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACCC,IADD,CACMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADd,EAECF,IAFD,CAEMG,IAAI,IAAIN,QAAQ,CAAC;AACrBC,MAAAA,IAAI,EAAE,iBADe;AAErBM,MAAAA,OAAO,EAAED;AAFY,KAAD,CAFtB;AAOD,GATD;AAUD;AAED,OAAO,MAAME,SAAS,GAAIF,IAAD,IAAU;AACjC,SAAQN,QAAD,IAAc;AACnBE,IAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCO,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEP,kBAAU;AAFH,OAD4B;AAKrCC,MAAAA,MAAM,EAAE,MAL6B;AAMrCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AAN+B,KAAlC,CAAL,CAQCH,IARD,CAQMC,IAAI,IAAIA,IAAI,CAACC,IAAL,EARd,EASCF,IATD,CASMW,MAAM,IAAId,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE,YAAP;AAAqBc,MAAAA,OAAO,EAAED;AAA9B,KAAD,CATxB;AAUD,GAXD;AAYD,CAbM;AAeP,OAAO,MAAME,YAAY,GAAIC,QAAD,IAAc;AACxC,SAAQjB,QAAD,IAAc;AACnB,WAAOE,KAAK,CAAE,iCAAgCe,QAAS,EAA3C,EAA8C;AACxDP,MAAAA,MAAM,EAAE;AADgD,KAA9C,CAAL,CAGNP,IAHM,CAGDW,MAAM,IAAId,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAE,eAAP;AAAwBc,MAAAA,OAAO,EAAED;AAAjC,KAAD,CAHjB,CAAP;AAID,GALD;AAMD,CAPM;AASP,OAAO,MAAMI,WAAW,GAAG,CAACD,QAAD,EAAWE,UAAX,KAA0B;AACnD,SAAQnB,QAAD,IAAc;AACnB,WAAOE,KAAK,CAAE,iCAAgCe,QAAS,YAA3C,EAAwD;AAClEP,MAAAA,MAAM,EAAE,MAD0D;AAElEC,MAAAA,IAAI,EAAEC,IAAI,CAACC;AAFuD,KAAxD,CAAL,CAINV,IAJM,CAIDC,IAAI,IAAIA,IAAI,CAACC,IAAL,EAJP,EAKNF,IALM,CAKDW,MAAM,IAAId,QAAQ,CAAC;AACvBC,MAAAA,IAAI,EAAE,cADiB;AAEvBc,MAAAA,OAAO,EAAED;AAFc,KAAD,CALjB,CAAP;AASD,GAVD;AAWD,CAZM;AAeP,OAAO,MAAMM,cAAc,GAAG,CAACH,QAAD,EAAWE,UAAX,KAA0B;AACtD,SAAQnB,QAAD,IAAc;AACnB,WAAOE,KAAK,CAAE,iCAAgCe,QAAS,cAAaE,UAAW,EAAnE,EAAsE;AAChFT,MAAAA,MAAM,EAAE;AADwE,KAAtE,CAAL,CAGNP,IAHM,CAGDW,MAAM,IAAId,QAAQ,CAAC;AACvBC,MAAAA,IAAI,EAAE,iBADiB;AAEvBc,MAAAA,OAAO,EAAED;AAFc,KAAD,CAHjB,CAAP;AAOD,GARD;AASD,CAVM","sourcesContent":["// action describes what you want to do -- simple function that returns an object\n// \"payload\" is the argument for an action\n\nexport function fetchIslands() {\n  return (dispatch) => {\n    dispatch({type: 'FETCH_ISLANDS'})\n    fetch('http://localhost:3000/islands')\n    .then(resp => resp.json())\n    .then(data => dispatch({\n      type: 'ISLANDS_FETCHED',\n      islands: data\n    })\n    )\n  }\n}\n\nexport const addIsland = (data) => {\n  return (dispatch) => {\n    fetch('http://localhost:3000/islands', {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify(data)\n    })\n    .then(resp => resp.json())\n    .then(island => dispatch({type: 'ADD_ISLAND', payload: island}))\n  }\n}\n\nexport const deleteIsland = (islandId) => {\n  return (dispatch) => {\n    return fetch(`http://localhost:3000/islands/${islandId}`, {\n      method: 'DELETE'\n    })\n    .then(island => dispatch({type: 'DELETE_ISLAND', payload: island}))\n  }\n}\n\nexport const addVillager = (islandId, villagerId) => {\n  return (dispatch) => {\n    return fetch(`http://localhost:3000/islands/${islandId}/villagers`, {\n      method: 'POST',\n      body: JSON.stringify\n    })\n    .then(resp => resp.json())\n    .then(island => dispatch({\n      type: 'ADD_VILLAGER',\n      payload: island})\n      )\n  }\n}\n\n\nexport const removeVillager = (islandId, villagerId) => {\n  return (dispatch) => {\n    return fetch(`http://localhost:3000/islands/${islandId}/villagers/${villagerId}`, {\n      method: 'DELETE',\n      })\n    .then(island => dispatch({\n      type: 'REMOVE_VILLAGER',\n      payload: island})\n      )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}