{"ast":null,"code":"var _jsxFileName = \"/Users/HotRonnie/Desktop/ac-villagers-react/villager-front/src/containers/VillagersContainer.js\";\n// import React from 'react';\n// import { connect } from 'react-redux';\n// import {Route, Switch} from 'react-router-dom';\n// import VillagerSearch from '../components/villagers/VillagerSearch';\n// import SearchResults from '../components/villagers/SearchResults';\n// import Villagers from '../components/villagers/Villagers';\n// import Villager from '../components/villagers/Villager';\n// function VillagersContainer({match, villagers}) {\n//     return (\n//       <>\n//         <Switch>\n//           <Route exact path=\"/villagers\" render={(routerProps) => <Villagers {...routerProps} villagers={villagers} />} />\n//           <Route exact path={`/villagers/:id`}\n//             render={(routerProps) => \n//             <Villager {...routerProps} \n//                 villagers={villagers} />}/>\n//           {/* <Route path={`/search`}\n//             render={(routerProps) => \n//             <VillagerSearch {...routerProps} />}/> */}\n//         </Switch>\n//         <VillagerSearch villagers={villagers} />\n//       </>\n//     )\n//   }\n// const mapStateToProps = state => {\n//   return {\n//     villagers: state.villagerReducer.villagers, \n//     islands: state.islandReducer.islands\n//   }\n// }\n// export default connect(mapStateToProps)(VillagersContainer);\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { addVillager, removeVillager } from '../actions/villagerActions';\nimport VillagerSearch from '../components/villagers/VillagerSearch';\nimport Villagers from '../components/villagers/Villagers';\nimport Villager from '../components/villagers/Villager';\n\nfunction VillagersContainer({\n  villagers,\n  islands,\n  addVillager,\n  removeVillager\n}) {\n  const [query, setQuery] = useState();\n\n  const handleAdd = (villager, island) => {\n    addVillager(villager, island);\n  }; // const handleRemove = (villager, island) => {\n  //   removeVillager(villager, island);\n  // }\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/villagers\",\n    render: routerProps => /*#__PURE__*/React.createElement(Villagers, Object.assign({}, routerProps, {\n      villagers: villagers,\n      islands: islands,\n      removeVillager: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 67\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    path: `/villagers/:id`,\n    render: routerProps => /*#__PURE__*/React.createElement(Villager, Object.assign({}, routerProps, {\n      villagers: villagers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(VillagerSearch, {\n    villagers: villagers,\n    handleAdd: handleAdd,\n    query: query,\n    setQuery: setQuery,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }));\n}\n\nconst mapStateToProps = state => {\n  return {\n    villagers: state.villagerReducer.villagers,\n    islands: state.islandReducer.islands\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addVillager,\n  removeVillager\n})(VillagersContainer);","map":{"version":3,"sources":["/Users/HotRonnie/Desktop/ac-villagers-react/villager-front/src/containers/VillagersContainer.js"],"names":["React","useState","connect","Route","Switch","addVillager","removeVillager","VillagerSearch","Villagers","Villager","VillagersContainer","villagers","islands","query","setQuery","handleAdd","villager","island","routerProps","mapStateToProps","state","villagerReducer","islandReducer"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,kBAA5B;AACA,SAAQC,WAAR,EAAqBC,cAArB,QAA0C,4BAA1C;AACA,OAAOC,cAAP,MAA2B,wCAA3B;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAOC,QAAP,MAAqB,kCAArB;;AAEA,SAASC,kBAAT,CAA4B;AAACC,EAAAA,SAAD;AAAYC,EAAAA,OAAZ;AAAqBP,EAAAA,WAArB;AAAkCC,EAAAA;AAAlC,CAA5B,EAA+E;AAC7E,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,EAAlC;;AAEA,QAAMc,SAAS,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AACtCZ,IAAAA,WAAW,CAACW,QAAD,EAAWC,MAAX,CAAX;AACD,GAFD,CAH6E,CAO7E;AACA;AACA;;;AAEE,sBACE,uDACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,YAAlB;AAA+B,IAAA,MAAM,EAAGC,WAAD,iBAAiB,oBAAC,SAAD,oBAAeA,WAAf;AAA4B,MAAA,SAAS,EAAEP,SAAvC;AAAkD,MAAA,OAAO,EAAEC,OAA3D;AAAoE,MAAA,cAAc,MAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAG,gBAAd;AACE,IAAA,MAAM,EAAGM,WAAD,iBACR,oBAAC,QAAD,oBAAcA,WAAd;AACI,MAAA,SAAS,EAAEP,SADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,eASE,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAEA,SAA3B;AACI,IAAA,SAAS,EAAEI,SADf;AAEI,IAAA,KAAK,EAAEF,KAFX;AAGI,IAAA,QAAQ,EAAEC,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAkBD;;AAEH,MAAMK,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLT,IAAAA,SAAS,EAAES,KAAK,CAACC,eAAN,CAAsBV,SAD5B;AAELC,IAAAA,OAAO,EAAEQ,KAAK,CAACE,aAAN,CAAoBV;AAFxB,GAAP;AAID,CALD;;AAOA,eAAeV,OAAO,CAACiB,eAAD,EAAkB;AAACd,EAAAA,WAAD;AAAcC,EAAAA;AAAd,CAAlB,CAAP,CAAwDI,kBAAxD,CAAf","sourcesContent":["// import React from 'react';\n// import { connect } from 'react-redux';\n// import {Route, Switch} from 'react-router-dom';\n// import VillagerSearch from '../components/villagers/VillagerSearch';\n// import SearchResults from '../components/villagers/SearchResults';\n// import Villagers from '../components/villagers/Villagers';\n// import Villager from '../components/villagers/Villager';\n\n// function VillagersContainer({match, villagers}) {\n\n//     return (\n//       <>\n//         <Switch>\n//           <Route exact path=\"/villagers\" render={(routerProps) => <Villagers {...routerProps} villagers={villagers} />} />\n//           <Route exact path={`/villagers/:id`}\n//             render={(routerProps) => \n//             <Villager {...routerProps} \n//                 villagers={villagers} />}/>\n//           {/* <Route path={`/search`}\n//             render={(routerProps) => \n//             <VillagerSearch {...routerProps} />}/> */}\n          \n//         </Switch>\n\n//         <VillagerSearch villagers={villagers} />\n        \n//       </>\n//     )\n//   }\n\n// const mapStateToProps = state => {\n//   return {\n//     villagers: state.villagerReducer.villagers, \n//     islands: state.islandReducer.islands\n//   }\n// }\n\n// export default connect(mapStateToProps)(VillagersContainer);\n\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {Route, Switch} from 'react-router-dom';\nimport {addVillager, removeVillager} from '../actions/villagerActions'\nimport VillagerSearch from '../components/villagers/VillagerSearch';\nimport Villagers from '../components/villagers/Villagers';\nimport Villager from '../components/villagers/Villager';\n\nfunction VillagersContainer({villagers, islands, addVillager, removeVillager}) {\n  const [query, setQuery] = useState();\n\n  const handleAdd = (villager, island) => {\n    addVillager(villager, island);\n  }\n\n  // const handleRemove = (villager, island) => {\n  //   removeVillager(villager, island);\n  // }\n\n    return (\n      <>\n        <Switch>\n          <Route exact path=\"/villagers\" render={(routerProps) => <Villagers {...routerProps} villagers={villagers} islands={islands} removeVillager />} />\n          <Route path={`/villagers/:id`}\n            render={(routerProps) => \n            <Villager {...routerProps} \n                villagers={villagers} />}/>\n        </Switch>\n\n        <VillagerSearch villagers={villagers} \n            handleAdd={handleAdd} \n            query={query} \n            setQuery={setQuery} />\n\n        \n      </>\n    )\n  }\n\nconst mapStateToProps = state => {\n  return {\n    villagers: state.villagerReducer.villagers, \n    islands: state.islandReducer.islands\n  }\n}\n\nexport default connect(mapStateToProps, {addVillager, removeVillager})(VillagersContainer);"]},"metadata":{},"sourceType":"module"}