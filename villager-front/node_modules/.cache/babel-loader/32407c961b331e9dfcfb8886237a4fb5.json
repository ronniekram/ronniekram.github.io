{"ast":null,"code":"var _jsxFileName = \"/Users/HotRonnie/Desktop/ac-villagers-react/villager-front/src/components/villagers/Villagers.js\";\nimport React from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { removeVillager } from '../../actions/villagerActions';\nimport Villager from './Villager';\n\nfunction Villagers({\n  villagers\n}) {\n  const handleRemove = (villager, island) => {\n    removeVillager(villager, island);\n  };\n\n  const list = villagers && villagers.map(villager => /*#__PURE__*/React.createElement(\"li\", {\n    key: villager.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, \" \", /*#__PURE__*/React.createElement(Link, {\n    to: `/villagers/${villager.id}`,\n    villagers: villagers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 28\n    }\n  }, \" \", villager.name, \" \"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleRemove(villager.id, villager.island_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 114\n    }\n  }, \" x \"), \" \"));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n    path: \"/villagers/:id\",\n    render: routerProps => /*#__PURE__*/React.createElement(Villager, Object.assign({}, routerProps, {\n      villagers: villagers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 59\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, list));\n}\n\nconst mapStateToProps = state => {\n  return {\n    villagers: state.VillagerReducer.villagers\n  };\n};\n\nexport default connect(mapStateToProps, {\n  removeVillager\n})(Villagers);","map":{"version":3,"sources":["/Users/HotRonnie/Desktop/ac-villagers-react/villager-front/src/components/villagers/Villagers.js"],"names":["React","Link","Route","connect","removeVillager","Villager","Villagers","villagers","handleRemove","villager","island","list","map","id","name","island_id","routerProps","mapStateToProps","state","VillagerReducer"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,kBAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAAQC,cAAR,QAA6B,+BAA7B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,SAASC,SAAT,CAAmB;AAACC,EAAAA;AAAD,CAAnB,EAAgC;AAE9B,QAAMC,YAAY,GAAG,CAACC,QAAD,EAAWC,MAAX,KAAsB;AACvCN,IAAAA,cAAc,CAACK,QAAD,EAAWC,MAAX,CAAd;AACH,GAFD;;AAIA,QAAMC,IAAI,GAAGJ,SAAS,IAAIA,SAAS,CAACK,GAAV,CAAcH,QAAQ,iBAC9C;AAAI,IAAA,GAAG,EAAEA,QAAQ,CAACI,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAuB,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,cAAaJ,QAAQ,CAACI,EAAG,EAApC;AAAuC,IAAA,SAAS,EAAEN,SAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA+DE,QAAQ,CAACK,IAAxE,MAAvB,oBAA6G;AAAQ,IAAA,OAAO,EAAE,MAAMN,YAAY,CAACC,QAAQ,CAACI,EAAV,EAAcJ,QAAQ,CAACM,SAAvB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA7G,MADwB,CAA1B;AAEA,sBACE,uDACA,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,gBAAZ;AAA6B,IAAA,MAAM,EAAGC,WAAD,iBAAiB,oBAAC,QAAD,oBAAcA,WAAd;AAA2B,MAAA,SAAS,EAAET,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,IADH,CAFA,CADF;AAQD;;AAED,MAAMM,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLX,IAAAA,SAAS,EAAEW,KAAK,CAACC,eAAN,CAAsBZ;AAD5B,GAAP;AAGD,CAJD;;AAMA,eAAeJ,OAAO,CAACc,eAAD,EAAkB;AAACb,EAAAA;AAAD,CAAlB,CAAP,CAA2CE,SAA3C,CAAf","sourcesContent":["import React from 'react';\nimport { Link, Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport {removeVillager} from '../../actions/villagerActions'\nimport Villager from './Villager'\n\nfunction Villagers({villagers}) {\n\n  const handleRemove = (villager, island) => {\n      removeVillager(villager, island)\n  }\n  \n  const list = villagers && villagers.map(villager =>\n    <li key={villager.id}> <Link to={`/villagers/${villager.id}`} villagers={villagers}> {villager.name} </Link> <button onClick={() => handleRemove(villager.id, villager.island_id)} > x </button> </li>)\n  return (\n    <>\n    <Route path=\"/villagers/:id\" render={(routerProps) => <Villager {...routerProps} villagers={villagers} />} />\n    <ul>\n      {list}\n    </ul>\n    </>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    villagers: state.VillagerReducer.villagers\n  }\n}\n\nexport default connect(mapStateToProps, {removeVillager})(Villagers);"]},"metadata":{},"sourceType":"module"}