{"ast":null,"code":"export default function islandReducer(state = {\n  villagers: []\n}, action) {\n  switch (action.type) {\n    case 'FETCH_ISLANDS':\n      return {\n        islands: action.payload\n      };\n\n    case 'ADD_ISLAND':\n      return { ...state,\n        islands: [...state.islands, action.payload]\n      };\n\n    case 'ADD_VILLAGER':\n      let islands = state.islands.map(island => {\n        // in addition to matching id, make sure villager count is less than 10\n        if (island.id === action.payload.id && island.villagers.count < 10) {\n          return action.payload;\n        } else {\n          return island;\n        }\n      });\n      return { ...state,\n        islands: islands\n      };\n\n    case 'DELETE_VILLAGER':\n      let islandsTwo = state.islands.map(island => {\n        if (island.id === action.payload.id) {\n          return action.payload;\n        } else {\n          return island;\n        }\n      });\n      return { ...state,\n        islands: islandsTwo\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/HotRonnie/Desktop/ac-villagers-react/villager-front/src/reducers/IslandReducer.js"],"names":["islandReducer","state","villagers","action","type","islands","payload","map","island","id","count","islandsTwo"],"mappings":"AAAA,eAAe,SAASA,aAAT,CAAuBC,KAAK,GAAG;AAACC,EAAAA,SAAS,EAAE;AAAZ,CAA/B,EAAgDC,MAAhD,EAAwD;AACrE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,eAAL;AACE,aAAO;AAACC,QAAAA,OAAO,EAAEF,MAAM,CAACG;AAAjB,OAAP;;AACF,SAAK,YAAL;AACE,aAAO,EAAC,GAAGL,KAAJ;AAAWI,QAAAA,OAAO,EAAE,CAAC,GAAGJ,KAAK,CAACI,OAAV,EAAmBF,MAAM,CAACG,OAA1B;AAApB,OAAP;;AACF,SAAK,cAAL;AACE,UAAID,OAAO,GAAGJ,KAAK,CAACI,OAAN,CAAcE,GAAd,CAAkBC,MAAM,IAAI;AACxC;AACA,YAAIA,MAAM,CAACC,EAAP,KAAcN,MAAM,CAACG,OAAP,CAAeG,EAA7B,IAAmCD,MAAM,CAACN,SAAP,CAAiBQ,KAAjB,GAAyB,EAAhE,EAAoE;AAClE,iBAAOP,MAAM,CAACG,OAAd;AACD,SAFD,MAEO;AACL,iBAAOE,MAAP;AACD;AACF,OAPa,CAAd;AAQA,aAAO,EAAC,GAAGP,KAAJ;AAAWI,QAAAA,OAAO,EAAEA;AAApB,OAAP;;AACF,SAAK,iBAAL;AACE,UAAIM,UAAU,GAAGV,KAAK,CAACI,OAAN,CAAcE,GAAd,CAAkBC,MAAM,IAAI;AAC3C,YAAIA,MAAM,CAACC,EAAP,KAAcN,MAAM,CAACG,OAAP,CAAeG,EAAjC,EAAqC;AACnC,iBAAON,MAAM,CAACG,OAAd;AACD,SAFD,MAEO;AACL,iBAAOE,MAAP;AACD;AACF,OANgB,CAAjB;AAOA,aAAO,EAAC,GAAGP,KAAJ;AAAWI,QAAAA,OAAO,EAAEM;AAApB,OAAP;;AACF;AACE,aAAOV,KAAP;AAzBJ;AA2BD","sourcesContent":["export default function islandReducer(state = {villagers: []}, action) {\n  switch (action.type) {\n    case 'FETCH_ISLANDS':\n      return {islands: action.payload}\n    case 'ADD_ISLAND': \n      return {...state, islands: [...state.islands, action.payload]}\n    case 'ADD_VILLAGER': \n      let islands = state.islands.map(island => {\n        // in addition to matching id, make sure villager count is less than 10\n        if (island.id === action.payload.id && island.villagers.count < 10) {\n          return action.payload\n        } else {\n          return island\n        }\n      })\n      return {...state, islands: islands}\n    case 'DELETE_VILLAGER':\n      let islandsTwo = state.islands.map(island => {\n        if (island.id === action.payload.id) {\n          return action.payload;\n        } else {\n          return island\n        }\n      })\n      return {...state, islands: islandsTwo}\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}