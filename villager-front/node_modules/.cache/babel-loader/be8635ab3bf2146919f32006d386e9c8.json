{"ast":null,"code":"// export default function islandReducer(state = {villagers: []}, action) {\n//   switch (action.type) {\n//     case 'FETCH_ISLANDS':\n//       return {islands: action.payload}\n//     case 'ADD_ISLAND': \n//       return {...state, islands: [...state.islands, action.payload]}\n//     case 'DELETE_ISLAND':\n//       return state;\n//     case 'ADD_VILLAGER': \n//       let islands = state.islands.map(island => {\n//         // in addition to matching id, make sure villager count is less than 10\n//         if (island.id === action.payload.id && island.villagers.count < 10) {\n//           return action.payload\n//         } else {\n//           return island\n//         }\n//       })\n//       return {...state, islands: islands}\n//     case 'DELETE_VILLAGER':\n//       let islandsTwo = state.islands.map(island => {\n//         if (island.id === action.payload.id) {\n//           return action.payload;\n//         } else {\n//           return island\n//         }\n//       })\n//       return {...state, islands: islandsTwo}\n//     default:\n//       return state;\n//   }\n// }","map":{"version":3,"sources":["/Users/HotRonnie/Desktop/ac-villagers-react/villager-front/src/reducers/IslandReducer.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// export default function islandReducer(state = {villagers: []}, action) {\n//   switch (action.type) {\n//     case 'FETCH_ISLANDS':\n//       return {islands: action.payload}\n//     case 'ADD_ISLAND': \n//       return {...state, islands: [...state.islands, action.payload]}\n//     case 'DELETE_ISLAND':\n//       return state;\n//     case 'ADD_VILLAGER': \n//       let islands = state.islands.map(island => {\n//         // in addition to matching id, make sure villager count is less than 10\n//         if (island.id === action.payload.id && island.villagers.count < 10) {\n//           return action.payload\n//         } else {\n//           return island\n//         }\n//       })\n//       return {...state, islands: islands}\n//     case 'DELETE_VILLAGER':\n//       let islandsTwo = state.islands.map(island => {\n//         if (island.id === action.payload.id) {\n//           return action.payload;\n//         } else {\n//           return island\n//         }\n//       })\n//       return {...state, islands: islandsTwo}\n//     default:\n//       return state;\n//   }\n// }\n\n"]},"metadata":{},"sourceType":"module"}