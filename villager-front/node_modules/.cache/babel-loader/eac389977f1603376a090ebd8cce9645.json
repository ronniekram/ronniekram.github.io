{"ast":null,"code":"var _jsxFileName = \"/Users/HotRonnie/Desktop/ac-villagers-react/villager-front/src/components/villagers/Villagers.js\";\n// import React from 'react';\n// import { Link, Route } from 'react-router-dom'\n// import { connect } from 'react-redux'\n// import { Button } from 'react-bootstrap'\n// import {removeVillager} from '../../actions/villagerActions'\n// import Villager from './Villager'\n// function Villagers({removeVillager, villagers, history, match}) {\n//   const handleRemove = (villager, island) => {\n//     removeVillager(villager, island)\n//     window.location.reload(true);\n//   }\n//   const list = villagers && villagers.map(villager =>\n//     <li key={villager.id}> \n//     <Link to={`/villagers/${villager.id}`} \n//       villagers={villagers} \n//       className=\"link\">  \n//       {villager.name} </Link> \n//         <Button \n//           size=\"sm\" \n//           variant=\"light\"\n//           onClick={() => handleRemove(villager.id, villager.island_id)} > x </Button>\n//       </li>)\n//   return (\n//     <>\n//         <Route path=\"/villagers/:id\" render={(routerProps) => <Villager {...routerProps} villagers={villagers} />} />\n//         <ul className=\"village\">\n//           {list}\n//         </ul>\n//     </>\n//   )\n// }\n// export default connect(null, {removeVillager})(Villagers);\nimport React from 'react';\nimport { Link, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Button } from 'react-bootstrap';\nimport { removeVillager } from '../../actions/villagerActions';\nimport { addVillager } from '../../actions/villagerActions';\nimport Villager from './Villager';\n\nfunction Villagers({\n  addVillager,\n  removeVillager,\n  villager,\n  villagers,\n  island,\n  history,\n  match\n}) {\n  const handleRemove = (villager, island) => {\n    removeVillager(villager, island);\n    window.location.reload(true);\n  };\n\n  const handleAdd = (villager, island) => {\n    addVillager(villager, island);\n    window.location.reload(true);\n  };\n\n  const searchList = villagers && villagers.map(villager => /*#__PURE__*/React.createElement(\"li\", {\n    key: villager.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/villagers/${villager.id}`,\n    villagers: villagers,\n    className: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, villager.name, \" \"), /*#__PURE__*/React.createElement(Button, {\n    size: \"sm\",\n    variant: \"light\",\n    onClick: () => handleAdd(villager.id, island.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, \" Add Villager \")));\n  const removeList = villagers && villagers.map(villager => /*#__PURE__*/React.createElement(\"li\", {\n    key: villager.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/villagers/${villager.id}`,\n    villagers: villagers,\n    className: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 5\n    }\n  }, villager.name, \" \"), /*#__PURE__*/React.createElement(Button, {\n    size: \"sm\",\n    variant: \"light\",\n    onClick: () => handleRemove(villager.id, villager.island_id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \" x \")));\n  const list = villagers && villagers.map(villager => /*#__PURE__*/React.createElement(\"li\", {\n    key: villager.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/villagers/${villager.id}`,\n    villagers: villagers,\n    className: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, villager.name, \" \"), \" \"));\n\n  const chooseList = (villager, island) => {\n    if (villager.island_id == island.id) {\n      return {\n        removeList\n      };\n    } else if (villager.island_id !== island.id && island.villagers.count > 10) {\n      return {\n        searchList\n      };\n    } else {\n      return {\n        list\n      };\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Route, {\n    path: \"/villagers/:id\",\n    render: routerProps => /*#__PURE__*/React.createElement(Villager, Object.assign({}, routerProps, {\n      villagers: villagers,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 63\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"village\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, chooseList(villager, island)));\n}\n\nexport default connect(null, {\n  removeVillager,\n  addVillager\n})(Villagers);","map":{"version":3,"sources":["/Users/HotRonnie/Desktop/ac-villagers-react/villager-front/src/components/villagers/Villagers.js"],"names":["React","Link","Route","connect","Button","removeVillager","addVillager","Villager","Villagers","villager","villagers","island","history","match","handleRemove","window","location","reload","handleAdd","searchList","map","id","name","removeList","island_id","list","chooseList","count","routerProps"],"mappings":"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","sourcesContent":["// import React from 'react';\n// import { Link, Route } from 'react-router-dom'\n// import { connect } from 'react-redux'\n// import { Button } from 'react-bootstrap'\n// import {removeVillager} from '../../actions/villagerActions'\n// import Villager from './Villager'\n\n// function Villagers({removeVillager, villagers, history, match}) {\n\n//   const handleRemove = (villager, island) => {\n//     removeVillager(villager, island)\n//     window.location.reload(true);\n//   }\n  \n//   const list = villagers && villagers.map(villager =>\n//     <li key={villager.id}> \n//     <Link to={`/villagers/${villager.id}`} \n//       villagers={villagers} \n//       className=\"link\">  \n//       {villager.name} </Link> \n//         <Button \n//           size=\"sm\" \n//           variant=\"light\"\n//           onClick={() => handleRemove(villager.id, villager.island_id)} > x </Button>\n//       </li>)\n//   return (\n//     <>\n//         <Route path=\"/villagers/:id\" render={(routerProps) => <Villager {...routerProps} villagers={villagers} />} />\n//         <ul className=\"village\">\n//           {list}\n//         </ul>\n//     </>\n//   )\n// }\n\n// export default connect(null, {removeVillager})(Villagers);\n\n\nimport React from 'react';\nimport { Link, Route } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Button } from 'react-bootstrap'\nimport {removeVillager} from '../../actions/villagerActions'\nimport {addVillager} from '../../actions/villagerActions';\nimport Villager from './Villager'\n\nfunction Villagers({addVillager, removeVillager, villager, villagers, island, history, match}) {\n\n  const handleRemove = (villager, island) => {\n    removeVillager(villager, island)\n    window.location.reload(true);\n  }\n\n  const handleAdd = (villager, island) => {\n    addVillager(villager, island);\n    window.location.reload(true);\n  }\n\n  const searchList =  villagers && villagers.map(villager =>\n    <li key={villager.id}> \n    <Link to={`/villagers/${villager.id}`} \n      villagers={villagers} \n      className=\"link\">  \n      {villager.name} </Link> \n      <Button size=\"sm\" \n        variant=\"light\"\n        onClick={() => handleAdd(villager.id, island.id)}> Add Villager </Button>\n      </li>)\n\n  \n  const removeList = villagers && villagers.map(villager =>\n    <li key={villager.id}> \n    <Link to={`/villagers/${villager.id}`} \n      villagers={villagers} \n      className=\"link\">  \n      {villager.name} </Link> \n        <Button \n          size=\"sm\" \n          variant=\"light\"\n          onClick={() => handleRemove(villager.id, villager.island_id)} > x </Button>\n      </li>)\n\n    const list = villagers && villagers.map(villager =>\n      <li key={villager.id}> \n      <Link to={`/villagers/${villager.id}`} \n        villagers={villagers} \n        className=\"link\">  \n        {villager.name} </Link> </li> )\n\n    const chooseList = (villager, island) => {\n      if (villager.island_id == island.id) {\n        return {removeList}\n      } else if (villager.island_id !== island.id && island.villagers.count > 10) {\n        return {searchList}\n      } else {\n        return {list}\n      }\n}\n  \n  return (\n    <>\n        <Route path=\"/villagers/:id\" render={(routerProps) => <Villager {...routerProps} villagers={villagers} />} />\n        <ul className=\"village\">\n          {chooseList(villager, island)}\n        </ul>\n    </>\n  )\n}\n\nexport default connect(null, {removeVillager, addVillager})(Villagers);"]},"metadata":{},"sourceType":"module"}